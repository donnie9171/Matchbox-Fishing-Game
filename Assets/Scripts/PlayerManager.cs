using Unity.VisualScripting;
using UnityEngine;

public class PlayerManager : MonoBehaviour
{
    public int maxlifeCount = 3; // ???l???R???q
    public bool isGameOver; // ?C???O?_????
    public bool isFightingWithFish = false; // ?O?_???b?P??????

    public GameObject canvasManagerRef; // ???? CanvasManager\
    public GameObject playerhookRef;
    private CanvasManager canvasManager; // CanvasManager ??????
    public SpriteSpawner spriteSpawner;
    private LifeCountList lifeCountList; // ???????????R???q?? UI
    public GradeOnCatch gradeOnCatch; // ?????????????????? UI

    public GameObject fishfightManager;

    public int currentFishCount = 0; // ???e???????q
    public int currentlifeCount = 3; 
    public FishManagerScript fishManager; // FishManagerScript ??????
    public fishCostumeUI fishfightCostumeController, catchCostumeController; // FishCostumeController ??????

    void Start()
    {
        canvasManager = canvasManagerRef.GetComponent<CanvasManager>(); // ???? CanvasManager ??????
        canvasManager.Init(); // ???l?? CanvasManager
        canvasManager.ResetGame(); // ???????l?e??
        isGameOver = false; // ???l???C?????A

        currentlifeCount = maxlifeCount; // ???l?????e???R???q
        lifeCountList = canvasManagerRef.GetComponentInChildren<LifeCountList>();
        lifeCountList.PopulateUIList(maxlifeCount); // ?]?m???R???qUI
        lifeCountList.SetLifeCount(currentlifeCount, maxlifeCount); // ???l?????R???qUI????

        fishfightManager.SetActive(false); // ?T?O?????????z?????l???????????A

        spriteSpawner.StartSpawningObstacles(); // ?}?l??????????
    }
    public void takedamage()
    {
        if (isGameOver) return; // ?p?G?C???w?g?????A?h???B?z???`
        currentlifeCount--; // ???????R???q
        lifeCountList.SetLifeCount(currentlifeCount, maxlifeCount);
        if (currentlifeCount <= 0)
        {
            currentlifeCount = 0;
            isGameOver = true; // ?p?G???R???q?p??????0?A?h?C??????
            Debug.Log("Game Over!");
            canvasManager.GameOver(); // ?I?s CanvasManager ?? GameOver ???k
            spriteSpawner.isGameOver = true; // ??????????????
        }
    }

    public void OnFishFightEnter()
    {
        if (isFightingWithFish) return; // ?p?G?w?g?b?P???????A?h???B?z
        spriteSpawner.PauseSpawning();
        playerhookRef.SetActive(false); // ???????_

        isFightingWithFish = true; // ?]?m???b?P???????????A
        canvasManager.StartFight(); // ?I?s CanvasManager ?? StartFight ???k
        fishfightManager.SetActive(true); // ?????????????z??
        fishfightCostumeController.SetFishCostume(fishManager.GetCurrentFish());
        catchCostumeController.SetFishCostume(fishManager.GetCurrentFish());
    }

    public void OnFishFightExit()
    {
        if (!isFightingWithFish) return; // ?p?G?S???b?P???????A?h???B?z
        if(currentlifeCount <= 0) return; // ?p?G???R???q?p??????0?A?h???B?z
        spriteSpawner.ResumeSpawning();
        spriteSpawner.Respawnfish();

        fishfightManager.SetActive(false);
        playerhookRef.SetActive(true); // ???????_
        isFightingWithFish = false; // ???m???b?P???????????A
        canvasManager.ResetGame(); // ?I?s CanvasManager ?? ResetGame ???k
    }

    public void CatchFish(float timer)
    {
        if (isGameOver) return; // ?p?G?C???w?g?????A?h???B?z????
        currentFishCount++; // ?W?[???????????q
        
        canvasManager.FishCatched(); // ?I?s CanvasManager ?? FishCatched ???k
        gradeOnCatch.SetGrade(timer); // ?]?m????????
        StartCoroutine(WaitAndExitFishFight());
    }

    public void FishGotAway()
    {
        if (isGameOver) return; // ?p?G?C???w?g?????A?h???B?z???k??
        if(currentlifeCount == 1)
        {
            canvasManager.FishGotAway();
            StartCoroutine(GameOver());
            return; 
        }
        takedamage();
        canvasManager.FishGotAway(); // ?I?s CanvasManager ?? FishGotAway ???k
        StartCoroutine(WaitAndExitFishFight());
    }
    
    private System.Collections.IEnumerator WaitAndExitFishFight()
    {
        yield return new WaitForSeconds(5f);
        OnFishFightExit();
    }

    private System.Collections.IEnumerator GameOver()
    {
        yield return new WaitForSeconds(5f);
        takedamage();
    }
}
